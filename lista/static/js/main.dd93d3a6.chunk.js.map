{"version":3,"sources":["componentes/Header.js","componentes/FormularioTareas.js","componentes/Tarea.js","componentes/ListaTareas.js","App.js","index.js"],"names":["Header","mostrarCompletadas","cambiarMostrarCompletadas","toggleCompletadas","className","onClick","icon","faEyeSlash","faEye","FormularioTareas","tareas","cambiarTareas","useState","inputTarea","cambiarInputTarea","action","onSubmit","e","preventDefault","id","uuidv4","texto","completada","type","placeholder","value","onChange","target","handleInput","faPlusSquare","Tarea","tarea","toggleCompletada","editarTarea","borrarTarea","editandoTarea","cambiarEditandoTarea","nuevaTarea","cambiarNuevaTarea","faCheckSquare","faSquare","faEdit","faTimes","ListaTareas","map","nuevoTexto","filter","length","App","tareasGuardadas","localStorage","getItem","JSON","parse","useEffect","setItem","stringify","configMostrarCompletadas","toString","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dd93d3a6.chunk.js","sourcesContent":["import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport {faEyeSlash, faEye} from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst Header = ({mostrarCompletadas, cambiarMostrarCompletadas}) => {\r\n\tconst toggleCompletadas = () => {\r\n\t\tcambiarMostrarCompletadas(!mostrarCompletadas);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<header className=\"header\">\r\n\t\t\t<h1 className=\"header__titulo\">Lista de Tareas</h1>\r\n\t\t\t{mostrarCompletadas ?\r\n\t\t\t\t<button \r\n\t\t\t\t\tclassName=\"header__boton\"\r\n\t\t\t\t\tonClick={() => toggleCompletadas()}\r\n\t\t\t\t>\r\n\t\t\t\t\tNo mostrar completadas\r\n\t\t\t\t\t<FontAwesomeIcon icon={faEyeSlash} className=\"header__icono-boton\" />\r\n\t\t\t\t</button>\r\n\t\t\t:\r\n\t\t\t\t<button \r\n\t\t\t\t\tclassName=\"header__boton\"\r\n\t\t\t\t\tonClick={() => toggleCompletadas()}\r\n\t\t\t\t>\r\n\t\t\t\t\tMostrar completadas\r\n\t\t\t\t\t<FontAwesomeIcon icon={faEye} className=\"header__icono-boton\" />\r\n\t\t\t\t</button>\r\n\t\t\t}\r\n\t\t</header>\r\n\t);\r\n}\r\n \r\nexport default Header;","import React, {useState} from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport {faPlusSquare} from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst FormularioTareas = ({tareas, cambiarTareas}) => {\r\n\tconst [inputTarea, cambiarInputTarea] = useState('');\r\n\r\n\tconst handleInput = (e) => {\r\n\t\tcambiarInputTarea(e.target.value);\r\n\t}\r\n\r\n\tconst handleSubmit = (e) => {\r\n\t\te.preventDefault();\r\n\r\n\t\tcambiarTareas(\r\n\t\t\t[\r\n\t\t\t\t...tareas, \r\n\t\t\t\t{\r\n\t\t\t\t\tid: uuidv4(),\r\n\t\t\t\t\ttexto: inputTarea,\r\n\t\t\t\t\tcompletada: false\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t);\r\n\t\t/* esto depura el input, al dar enter */\r\n\t\tcambiarInputTarea(''); \r\n\t}\r\n\r\n\treturn (\r\n\t\t<form action=\"\" className=\"formulario-tareas\" onSubmit={handleSubmit}>\r\n\t\t\t<input\r\n\t\t\t\ttype=\"text\"\r\n\t\t\t\tclassName=\"formulario-tareas__input\"\r\n\t\t\t\tplaceholder=\"Escribe una tarea\"\r\n\t\t\t\tvalue={inputTarea}\r\n\t\t\t\tonChange={(e) => handleInput(e)}\r\n\t\t\t/>\r\n\t\t\t<button \r\n\t\t\t\ttype=\"submit\"\r\n\t\t\t\tclassName=\"formulario-tareas__btn\"\r\n\t\t\t>\r\n\t\t\t\t<FontAwesomeIcon \r\n\t\t\t\t\ticon={faPlusSquare}\r\n\t\t\t\t\tclassName=\"formulario-tareas__icono-btn\" \r\n\t\t\t\t/>\r\n\t\t\t</button>\r\n\t\t</form>\r\n\t);\r\n}\r\n \r\nexport default FormularioTareas;","import React, {useState} from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport {faCheckSquare, faEdit, faSquare, faTimes} from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst Tarea = ({tarea, toggleCompletada, editarTarea, borrarTarea}) => {\r\n\tconst [editandoTarea, cambiarEditandoTarea] = useState(false);\r\n\tconst [nuevaTarea, cambiarNuevaTarea] = useState(tarea.texto);\r\n\r\n\tconst handleSubmit = (e) => {\r\n\t\te.preventDefault();\r\n\t\teditarTarea(tarea.id, nuevaTarea);\r\n\t\tcambiarEditandoTarea(false);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<li className=\"lista-tareas__tarea\">\r\n\t\t\t<FontAwesomeIcon \r\n\t\t\t\ticon={tarea.completada ? faCheckSquare : faSquare}\r\n\t\t\t\tclassName=\"lista-tareas__icono lista-tareas__icono-check\"\r\n\t\t\t\tonClick={() => toggleCompletada(tarea.id)}\r\n\t\t\t/>\r\n\t\t\t<div className=\"lista-tareas__texto\">\r\n\t\t\t\t{editandoTarea ? \r\n\t\t\t\t<form action=\"\" className=\"formulario-editar-tarea\" onSubmit={handleSubmit}>\r\n\t\t\t\t\t<input \r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\tclassName=\"formulario-editar-tarea__input\"\r\n\t\t\t\t\t\tvalue={nuevaTarea}\r\n\t\t\t\t\t\tonChange={(e) => cambiarNuevaTarea(e.target.value)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<button \r\n\t\t\t\t\t\ttype=\"submit\" \r\n\t\t\t\t\t\tclassName=\"formulario-editar-tarea__btn\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tActualizar\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</form>\r\n\t\t\t\t: tarea.texto\r\n\t\t\t\t}\r\n\t\t\t</div>\r\n\t\t\t<div className=\"lista-tareas__contenedor-botones\">\r\n\t\t\t\t<FontAwesomeIcon \r\n\t\t\t\t\ticon={faEdit} \r\n\t\t\t\t\tclassName=\"lista-tareas__icono lista-tareas__icono-accion\"\r\n\t\t\t\t\tonClick={() => cambiarEditandoTarea(!editandoTarea)}\r\n\t\t\t\t/>\r\n\t\t\t\t<FontAwesomeIcon \r\n\t\t\t\t\ticon={faTimes} \r\n\t\t\t\t\tclassName=\"lista-tareas__icono lista-tareas__icono-accion\" \r\n\t\t\t\t\tonClick={() => borrarTarea(tarea.id)}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t</li>\r\n\t);\r\n}\r\n \r\nexport default Tarea;","import React from 'react';\r\nimport Tarea from './Tarea';\r\n\r\nconst ListaTareas = ({tareas, cambiarTareas, mostrarCompletadas}) => {\r\n\tconst toggleCompletada = (id) => {\r\n\t\tcambiarTareas(tareas.map((tarea) => {\r\n\t\t\tif(tarea.id === id){\r\n\t\t\t\treturn {...tarea, completada: !tarea.completada}\r\n\t\t\t}\r\n\t\t\treturn tarea;\r\n\t\t}));\r\n\t}\r\n\r\n\tconst editarTarea = (id, nuevoTexto) => {\r\n\t\tcambiarTareas(tareas.map((tarea) => {\r\n\t\t\tif(tarea.id === id){\r\n\t\t\t\treturn {...tarea, texto: nuevoTexto}\r\n\t\t\t}\r\n\t\t\treturn tarea;\r\n\t\t}));\r\n\t}\r\n\r\n\tconst borrarTarea = (id) => {\r\n\t\tcambiarTareas(tareas.filter((tarea) => {\r\n\t\t\tif(tarea.id !== id){\r\n\t\t\t\treturn tarea;\r\n\t\t\t}\r\n\t\t\treturn;\r\n\t\t}));\r\n\t}\r\n\r\n\treturn (\r\n\t\t<ul className=\"lista-tareas\">\r\n\t\t\t{tareas.length > 0 ? tareas.map((tarea) => {\r\n\t\t\t\tif(mostrarCompletadas){\r\n\t\t\t\t\treturn <Tarea \r\n\t\t\t\t\t\t\t\tkey={tarea.id}\r\n\t\t\t\t\t\t\t\ttarea={tarea}\r\n\t\t\t\t\t\t\t\ttoggleCompletada={toggleCompletada}\r\n\t\t\t\t\t\t\t\teditarTarea={editarTarea}\r\n\t\t\t\t\t\t\t\tborrarTarea={borrarTarea}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t// Si la tarea no esta completada, la devolvemos.\r\n\t\t\t\t} else if(!tarea.completada){\r\n\t\t\t\t\treturn <Tarea \r\n\t\t\t\t\t\t\t\tkey={tarea.id}\r\n\t\t\t\t\t\t\t\ttarea={tarea}\r\n\t\t\t\t\t\t\t\ttoggleCompletada={toggleCompletada}\r\n\t\t\t\t\t\t\t\teditarTarea={editarTarea}\r\n\t\t\t\t\t\t\t\tborrarTarea={borrarTarea}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t}\r\n\t\t\t\t// Si ya esta completada no la devolvemos\r\n\t\t\t\treturn;\r\n\t\t\t})\r\n\t\t\t:<div className=\"lista-tareas__mensaje\">~ No hay tareas agregadas ~</div>\r\n\t\t\t}\r\n\t\t</ul>\r\n\t);\r\n}\r\n \r\nexport default ListaTareas;","import React, {useState, useEffect} from 'react';\nimport './App.css';\nimport Header from './componentes/Header';\nimport FormularioTareas from './componentes/FormularioTareas';\nimport ListaTareas from './componentes/ListaTareas';\n\nconst App = () => {\n  // Obtenemos las tareas guardadas de localstorage.\n  const tareasGuardadas = \n  localStorage.getItem('tareas') ? \n  JSON.parse(localStorage.getItem('tareas')) : [];\n\n  // Establecemos el estado de las tareas.\n  const [tareas, cambiarTareas] = useState(tareasGuardadas);\n\n  // Guardando el estado dentro de localstorage\n  useEffect(() => {\n    localStorage.setItem('tareas', JSON.stringify(tareas));\n  }, [tareas]);\n\n  // Accedemos a localstorage y comprobamos si mostrarCompletadas es null\n  let configMostrarCompletadas = '';\n  if(localStorage.getItem('mostrarCompletadas') === null){\n    configMostrarCompletadas = true;\n  } else {\n    configMostrarCompletadas = localStorage.getItem('mostrarCompletadas') === 'true';\n  }\n\n  // El estado de mostrarCompletadas\n  const [mostrarCompletadas, cambiarMostrarCompletadas] = useState(configMostrarCompletadas);\n// Con esto al recargar el navegador me muestra lo que ya tenia\n  useEffect(() => {\n    localStorage.setItem('mostrarCompletadas', mostrarCompletadas.toString());\n  }, [mostrarCompletadas]);\n\n  return (\n    <div className=\"contenedor\">\n      <Header \n        mostrarCompletadas={mostrarCompletadas} \n        cambiarMostrarCompletadas={cambiarMostrarCompletadas}\n      />\n      <FormularioTareas tareas={tareas} cambiarTareas={cambiarTareas} />\n      <ListaTareas \n        tareas={tareas}\n        cambiarTareas={cambiarTareas}\n        mostrarCompletadas={mostrarCompletadas}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}